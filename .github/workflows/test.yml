name: dev_run

on:
  push:
    branches-ignore:
      - main
  pull_request:
    branches-ignore:
      - main

jobs:
  build:
    name: Test CI
    runs-on: ubuntu-latest
    env:
      DBT_PROFILES_DIR: .config
      DBT_DATABRICKS_HOST: ${{ secrets.DBT_DATABRICKS_HOST_TEST }}
      DBT_DATABRICKS_ENDPOINT: ${{ secrets.DBT_DATABRICKS_ENDPOINT_TEST }}
      DBT_DATABRICKS_TOKEN: ${{ secrets.DBT_DATABRICKS_TOKEN_TEST }}

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

        # Compile CI database name for implicit creation
      - name: Set database name
        run: echo "DBT_DATABRICKS_DATABASE=$(echo dbt_ci_$(date +'%Y%m%d')_$(echo ${GITHUB_SHA} | cut -c1-8))" >> $GITHUB_ENV

        # Fetch production manifest file
      - uses: fixpoint/azblob-download-artifact@master
        with:
          connection-string: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
          name: dbt-target-prod
          path: prod-run-artifacts

        # Generate seeds
      - name: seed
        uses: sdaylor/dbt-databricks-action@main
        with:
          dbt_command: "dbt seed --select state:modified --full-refresh"

        # Run new dbt models and downstreams with defer flag
      - name: dbt run
        uses: sdaylor/dbt-databricks-action@main
        with:
          dbt_command: "dbt run -m state:modified+ --full-refresh --fail-fast --defer --state prod-run-artifacts"

        # Run tests that select from a new/modified resource or tests that are themselves new or modified
      - name: test
        uses: sdaylor/dbt-databricks-action@main
        with:
          dbt_command: "dbt test -m state:modified+ --defer --state prod-run-artifacts"

        # Drop CI database
      - name: CI Cleanup
        if: always()
        uses: sdaylor/dbt-databricks-action@main
        with:
          dbt_command: "dbt run-operation clean_ci_db --args '{ci_db_name: $DBT_DATABRICKS_DATABASE}'"